name: Build and Push Docker Image to GHCR

on:
  push:
    branches: [ "main" ] # Esegui il workflow su push al branch main
  pull_request:
    branches: [ "main" ] # Esegui anche su pull request verso main (opzionale, per test)

jobs:
  build-and-push:
    runs-on: ubuntu-latest # Utilizza un runner Ubuntu
    permissions:
      contents: read
      packages: write # Permessi per scrivere su GitHub Packages (GHCR)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Azione per fare il checkout del codice

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin' # Distribuzione Temurin di OpenJDK
          cache: 'maven' # Abilita la cache per le dipendenze Maven

      - name: Grant execute permission to mvnw
        run: chmod +x ./mvnw

      - name: Build with Maven
        run: ./mvnw package # Comando per compilare e pacchettizzare l'applicazione

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # Nome utente GitHub dell'attore che ha triggerato il workflow
          password: ${{ secrets.GITHUB_TOKEN }} # Token fornito automaticamente da GitHub Actions

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Contesto di build (la root del repository)
          push: true # Indica di fare il push dell'immagine
          tags: ghcr.io/${{ github.repository_owner }}/simple-microservice:latest # Tag dell'immagine
          # Esempio: ghcr.io/tuo-username/simple-microservice:latest
          # github.repository_owner prende automaticamente il proprietario del repo (utente o organizzazione)

  #####################################################################
  # ðŸš¢  JOB 2 â€“ Deploy automatico su server self-hosted con Docker
  #####################################################################
  deploy-selfhosted:
    needs: build-and-push # aspetta la fine del job precedente
    runs-on: self-hosted  # gira su una macchina dove hai registrato un runner
    steps:
      - name: Pull latest image from GHCR
        run: docker pull ghcr.io/${{ github.repository_owner }}/simple-microservice:latest

      - name: Stop and remove old container
        run: |
          docker rm -f simple-microservice || true

      - name: Run new container
        run: |
          docker run -d --name simple-microservice -p 8060:8060 ghcr.io/${{ github.repository_owner }}/simple-microservice:latest